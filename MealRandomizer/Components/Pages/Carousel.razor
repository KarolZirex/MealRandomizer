@page "/"
@inject MealService MealService
@inject IJSRuntime JS
@rendermode InteractiveServer

<h3>Wylosuj obiad</h3>

<div class="carousel-container">
    <div class="carousel-wrapper">
        <div class="carousel" id="carousel">
            @foreach (var meal in MealService.GetMeals())
            {
                <div class="carousel-item">@meal.Name</div>
            }
        </div>
    </div>
</div>

@if (selectedMeal != null)
{
    <table class="table table-bordered mt-3">
        <thead>
            <tr>
                <th>Nazwa</th>
                <th>Składniki</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@selectedMeal.Name</td>
                <td>
                    <ul>
                        @foreach (var ingredient in selectedMeal.Ingredients)
                        {
                            <li>@ingredient</li>
                        }
                    </ul>
                </td>
            </tr>
        </tbody>
    </table>
}

<button @onclick="async () => await SpinCarousel()" class="btn btn-success mt-3">Losuj</button>


@code {
    private List<Meal> meals = new();
    private Meal? selectedMeal;

    protected override void OnInitialized()
    {
        meals = MealService.GetMeals();
    }

    private async Task SpinCarousel()
    {
        selectedMeal = MealService.GetRandomMeal();

        if (selectedMeal != null)
        {
            try
            {
                await JS.InvokeVoidAsync("startCarousel", selectedMeal.Name);
                Console.WriteLine("Animacja karuzeli została wywołana.");
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Błąd JS: {ex.Message}");
            }
        }
    }

}